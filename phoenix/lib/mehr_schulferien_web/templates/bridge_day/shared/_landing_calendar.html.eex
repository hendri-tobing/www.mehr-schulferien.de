<% best_months = ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"]%>
<% best_months_mini = ["Jan", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"]%>

<%= for best_bridge_day <- @best_bridge_days do %>
<% bridge_days_number = Integer.to_string(length(best_bridge_day[:bridge_days])) %>
<% max_days = Integer.to_string(best_bridge_day[:bridge_day_vacation_length]) %>
<% start_holidays = Date.add(@starts_on, best_bridge_day[:start_position]) %>
<% end_holidays = Date.add(start_holidays, best_bridge_day[:bridge_day_vacation_length] -1)%>
<% list_vacation = Enum.to_list(Date.range(start_holidays, end_holidays)) %>


<!-- checking integrity if :start_position and actual holidays -->
<%

if Enum.member?(list_vacation, List.first(best_bridge_day[:bridge_days])) and Enum.member?(list_vacation, List.last(best_bridge_day[:bridge_days])) do
  list_holidays = list_vacation
  start_holidays_checked = start_holidays
  end_holidays_checked = end_holidays
else
    end_holiday_temp = 
        List.last(best_bridge_day[:bridge_days])
        |> Date.add(best_bridge_day[:bridge_day_vacation_length] - 1)
    tail_holiday_temp = 
        List.last(best_bridge_day[:bridge_days])
        |> Date.range(end_holiday_temp)
        |> Enum.to_list
        |> Enum.sort

    non_tails =
        @days 
        |> Enum.filter(fn x -> x.value in (tail_holiday_temp -- best_bridge_day[:bridge_days]) end)
        |> Enum.filter(fn x -> x.periods == [] end)

    non_tail_list = for y <- non_tails do
        y.value
    end


    new_end_holidays = 
        if length(non_tail_list) > 0 do 
            non_tail_list
                |> Enum.sort
                |> List.first
                |> Date.add(-1)
        else
            end_holiday_temp
        end

    step_back = 1 - best_bridge_day[:bridge_day_vacation_length]
    new_start_holidays = Date.add(new_end_holidays, step_back) 

    new_start_holidays_2 =
        if Date.diff(new_start_holidays, List.first(best_bridge_day[:bridge_days])) >= 1 do
            List.first(best_bridge_day[:bridge_days])
        else
            new_start_holidays
        end

    holiday_diff = best_bridge_day[:bridge_day_vacation_length] - 1

    new_start_holidays_3 =
        cond do
           Date.day_of_week(new_start_holidays_2) == 1 -> Date.add(new_start_holidays_2,-2)
           true -> new_start_holidays_2 
        end

    new_end_holidays_3 = Date.add(new_start_holidays_3, holiday_diff)
    list_holidays_3 = Enum.to_list(Date.range(new_start_holidays_3, new_end_holidays_3))
    
    non_tails_2 =
        @days 
        |> Enum.filter(fn x -> x.value in (list_holidays_3 -- best_bridge_day[:bridge_days]) end)
        |> Enum.filter(fn x -> x.periods == [] end)

    non_tail_list_2 = for y <- non_tails_2 do
        y.value
    end

    new_end_holidays_4 = 
        if length(non_tail_list_2) > 0 do 
            non_tail_list_2
                |> Enum.sort
                |> List.first
                |> Date.add(-1)
        else
            new_end_holidays_3
        end

    new_start_holidays_4 = Date.add(new_end_holidays_4, step_back)
    start_holidays_checked = new_start_holidays_4
    end_holidays_checked = new_end_holidays_4
    list_holidays = Enum.to_list(Date.range(start_holidays_checked, end_holidays_checked))

end
%>

<% cond do 
  Date.day_of_week(start_holidays_checked) == 2 -> head_on_calendar = List.insert_at(list_holidays, 0, Date.add(start_holidays_checked, -1)) 
  Date.day_of_week(start_holidays_checked) == 3 -> head_on_calendar = List.insert_at(list_holidays, 0, Enum.to_list(Date.range(Date.add(start_holidays_checked, -2), Date.add(start_holidays_checked, -1)))) |> List.flatten 
  Date.day_of_week(start_holidays_checked) == 4 -> head_on_calendar = List.insert_at(list_holidays, 0, Enum.to_list(Date.range(Date.add(start_holidays_checked, -3), Date.add(start_holidays_checked, -1)))) |> List.flatten 
  Date.day_of_week(start_holidays_checked) == 5 -> head_on_calendar = List.insert_at(list_holidays, 0, Enum.to_list(Date.range(Date.add(start_holidays_checked, -4), Date.add(start_holidays_checked, -1)))) |> List.flatten
  Date.day_of_week(start_holidays_checked) == 6 -> head_on_calendar = List.insert_at(list_holidays, 0, Enum.to_list(Date.range(Date.add(start_holidays_checked, -5), Date.add(start_holidays_checked, -1)))) |> List.flatten   
  Date.day_of_week(start_holidays_checked) == 7 -> head_on_calendar = List.insert_at(list_holidays, 0, Enum.to_list(Date.range(Date.add(start_holidays_checked, -6), Date.add(start_holidays_checked, -1)))) |> List.flatten
  Date.day_of_week(start_holidays_checked) == 1 -> head_on_calendar = List.insert_at(list_holidays, 0, Enum.to_list(Date.range(Date.add(start_holidays_checked, -7), Date.add(start_holidays_checked, -1)))) |> List.flatten
  true -> head_on_calendar = list_holidays
end %>

<% cond do 
  Date.day_of_week(end_holidays_checked) == 6 -> list_on_calendar = head_on_calendar ++ Date.add(end_holidays_checked, 1)
  Date.day_of_week(end_holidays_checked) == 5 -> list_on_calendar = head_on_calendar ++ Enum.to_list(Date.range(Date.add(end_holidays_checked, 1), Date.add(end_holidays_checked, 2))) |> List.flatten 
  Date.day_of_week(end_holidays_checked) == 4 -> list_on_calendar = head_on_calendar ++ Enum.to_list(Date.range(Date.add(end_holidays_checked, 1), Date.add(end_holidays_checked, 3))) |> List.flatten 
  Date.day_of_week(end_holidays_checked) == 3 -> list_on_calendar = head_on_calendar ++ Enum.to_list(Date.range(Date.add(end_holidays_checked, 1), Date.add(end_holidays_checked, 4))) |> List.flatten
  Date.day_of_week(end_holidays_checked) == 2 -> list_on_calendar = head_on_calendar ++ Enum.to_list(Date.range(Date.add(end_holidays_checked, 1), Date.add(end_holidays_checked, 5))) |> List.flatten   
  Date.day_of_week(end_holidays_checked) == 1 -> list_on_calendar = head_on_calendar ++ Enum.to_list(Date.range(Date.add(end_holidays_checked, 1), Date.add(end_holidays_checked, 6))) |> List.flatten
  true -> list_on_calendar = head_on_calendar
end %>

<% list_inactive_days = list_on_calendar -- list_holidays %> 
<% list_inactive_weekend =
    list_inactive_days 
    |> Enum.filter(fn x -> Date.day_of_week(x) == 6 or Date.day_of_week(x) == 7 end)%>

<!-- check number of weekend days and free holidays -->
<% weekend_number = 
   Enum.filter(@days, fn x -> x.value in list_holidays end) 
   |> Enum.filter(fn x -> x.weekday == 6 or x.weekday == 7 end) 
   |> length %>
<% feier_number = 
   Enum.filter(@days, fn x -> x.value in list_holidays end) 
   |> Enum.filter(fn x -> x.periods != [] end) 
   |> length %>

<% feier_number_calculated =
    feier_number - weekend_number
%>

<!--check if the bridge days are within the same year or not -->

<% best_year1 = List.first(list_holidays).year %>
<% best_year2 = List.last(list_holidays).year %>

<% if best_year1 == best_year2 do %>  
  <% year_label = Integer.to_string(best_year1) %>
<% else %>
  <% year_label = Integer.to_string(best_year1) <>"/"<> Integer.to_string(best_year2) %>
<% end %>

<!--check if the bridge days are within a month or not -->

<% best_month_number1 = List.first(list_holidays).month %>
<% best_month_number2 = List.last(list_holidays).month %>

<% if best_month_number1 == best_month_number2 do %>  
  <% bridge_month = best_month_number1 - 1 %>
  <% month_label = Enum.at(best_months, bridge_month) %>
<% else %>
    <% bridge_month1 = best_month_number1 - 1 %>
    <% bridge_month2 = best_month_number2 - 1 %>
    <% month_label = Enum.at(best_months_mini, bridge_month1) <>"-"<> Enum.at(best_months_mini, bridge_month2) %>
<% end %>

<div class="col-sm-4">
    <div class='panel panel-default'>
        <div class="panel-heading">
            <h3 class="panel-title">
                <%= bridge_days_number %>
                <%= if bridge_days_number == 1 or bridge_days_number == "1" do %>
                    Tag 
                <%= else %>
                    Tage
                <% end %>
                Urlaub = <%= max_days %> Tage frei
            </h3>
        </div>
        <div class="panel-body">
            <h3> 
                <%= month_label %> <div class="pull-right text-muted"> <%= year_label %></div> 
            </h3>
            <table class="table table-condensed">
                <thead>
                    <tr>
                    <th>Mo.</th>
                    <th>Di.</th>
                    <th>Mi.</th>
                    <th>Do.</th>
                    <th>Fr.</th>
                    <th class="active">Sa.</th>
                    <th class="active">So.</th>
                    </tr>
                </thead>
                <tbody>
                    <% dayz = Enum.filter(@days_on_calendar, fn day -> day.value in list_on_calendar end)%>

                    <%= for week <- Enum.chunk_every(dayz, 7) do %>
                    <tr>
                        <%= for day <- week do %>
                            <%= if day == nil do %>
                                <td></td>
                            <% else %>
                                <%= if Enum.member?(best_bridge_day[:bridge_days], day.value) do %>
                                    <td class="text-right leaveday">
                                        <%= day.day_of_month %>.
                                    </td>
                                <% else %>
                                    <%= if Enum.member?(list_inactive_weekend, day.value) do %>
                                        <td class="text-right weekend inactive">
                                            <%= day.day_of_month%>
                                        </td>
                                    <%= else %>
                                       <td class="text-right <%= MehrSchulferienWeb.CalendarHelperLanding.bridge_day_css_class(day) %>">
                                            <%= day.day_of_month %>.
                                        </td>
                                    <% end %>
                                <% end %>
                            <% end %>
                        <% end %>
                    </tr>
                    <% end %>
                </tbody>
            </table>

            <div>
                <div class="row">
                    <div class="col-xs-9 text-right"> Eingereichte Urlaubstage<br>                    
                        <%= for {n, i} <- Enum.with_index(best_bridge_day[:bridge_days]) do %>
                            <%= if i < length(best_bridge_day[:bridge_days])-2 do %>
                                <a href = "#<%= n.month %>">
                                    <%= Integer.to_string(n.day) <>"."<>Integer.to_string(n.month)  <>".," %>
                                </a>
                            <%= else %>

                            <%= if i < length(best_bridge_day[:bridge_days])-1 do %>
                                <a href = "#<%= n.month %>">
                                    <%= Integer.to_string(n.day) <>"."<>Integer.to_string(n.month)  <>". "%>
                                </a>und 
                            <%= else %>
                                <a href = "#<%= n.month %>">
                                    <%= Integer.to_string(n.day) <>"."<> Integer.to_string(n.month) <>"." %>
                                </a>
                            <% end %>
                            <% end %>
                        <% end %>
                    </div>
                    <div class="col-xs-3 text-right">
                        <%= bridge_days_number %>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9 text-right">Feiertage</div>
                    <div class="col-xs-3 text-right">+ <%= feier_number_calculated%></div>
                </div>
                <div class="row">
                    <div class="col-xs-9 text-right">Wochenend-Tage</div>
                    <div class="col-xs-3 text-right">+ <%= weekend_number%></div>
                </div>
                <div class="row-sum">
                    <div class="row">
                        <div class="col-xs-9 text-right">Freie Tage</div>
                        <div class="col-xs-3 text-right">
                            <%= max_days %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<% end %>
